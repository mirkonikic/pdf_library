




[COMMAND LANG:]
- Write small lexer+parser+ASTanalyzer -> as a server cmd language
- Allowed, variable assignment, using of variables later on
- Chaining couple of commands with ;
- Piping output of commands with |     -> list user -i 19 | list object Book -pin (pipe input) or -stdin (input in next readme)
- options -> 
    -a (all)
    -n (name)
    -id (id)
    -inp (input from where[FILE:STDIN:PIPE])
- special characters
    !! -> last command
    |  -> pipe
    ;  -> chain sequentially/end of instruction
    =  -> assignment



[COMMANDS]
ban, echo, end, env, help, info, kick, list, msg, nothing, start, stop, time, visual

ban     -> delete account and ip put in ban list                                    -> ban user -ip/-n/-id [value]
echo    -> prints whatever is written and prints some env variables                 -> echo:mirko has $n apples     // $n is set with env
end     -> closes program -> closes sockets and everything else                     -> end now/XXy -> 05m           // default 60seconds
env     -> lists, sets and deletes env variables                                    -> env set/rm/list      -> env set n 5
help    -> prints command info banner                                               -> help env
info    -> prints info from single class or database                                -> info user -n Mirko [property]
kick    -> logs out the client                                                      -> kick user -ip/-n/-id [value]
list    -> list helps print out everything we need to know                          -> list user/object/... [OPTION] <value>
msg     -> send MessageBox pop-up to the client                                     -> msg user -ip/-n/-id [msg]
nothing -> literally nothing :0                                                     -> none -> prints one of the quotes
rm/add  -> manipulate database from here                                            -> ... mozda necu impl ovo
start   -> starts server -> start ip:port                                           -> start now/XXy ip:port
stop    -> stops server -> stops server                                             -> stop now/XXy
time    -> prints out time statistics -> client connections and message sendings    -> ... mozda necu impl ovo
visual  -> turns visual mode on or off -> more information                          -> visual on/off


    time 
    time user -a


    list user [OPTION]
        list user -a
        list user -u MIRKO
        list user -i 9
    list object [OPTION]
        list object -a
        list object Book -a
        list object Book -u
        list object Book -i 9
    list 


    visual on
    visual off



    PITANJA: 
        kako kreirati AutorID -> da li spada u ovaj projekat
        kako kreirati knjigu zbog ^
        Da li treba da menjam pdf za seminarski, da li je ok








sutra dodati all books, edit i delete i gotov admin
kod usera dodati status create i edit -> SK
onda ostaje dokumentacija jos samo






todo:
admin: Promena podataka o knjizi  -> osmisliti kako da bih zavrsio admina, ili u dgv listi ili kao odvojena forma -> najlakse bi bilo on enter da se posalje zahtev ili button EDIT
    dodaj samo na promenu dgv-a da se slaje request bazi
user_: Pretrazivanje liste knjiga -> samo prekopiraj isto iz admina, pa npr moze da se selektuje i CreateBookStatus?? npr i preko liste MyBooks
{
user_: Kreiranje statusa knjige
user_: Promena statusa knjige
} -> mislim da ovo mogu preko dgv, choose book from list, itd pa kreira nekoliko ili edituje vec kreirane i filter dodati po read, to_read i reading -> brstrana








Vidi da li ces da implementiras za sve Napravi i Obrisi ili samo sta je navedeno
Sada sledi protokol i klijent




- implement exception handlers
- finish GUI forms -> zanimljivo resenje sam smislio za kontrolisanje GUI formi
+ napravi lepsi GUI


- fix problem with terminal server prompts -> overwriteuju se
- ulepsati validaciju -> real time
- create more generics



- povrsno LoginForm je gotov skroz -> slede User i Admin Form

- sredi sto ostanu u listi korisnici i kad se izloguju


- PROBLEMI -> pitati Tatjanu:
+ admin ne moze da napravi nov format/zanr/...
    :resenje: mozda napraviti da kad se doda nova knjiga sa spec formatom, tad da doda tek
    :resenje: drugo mozda da dodam da se ubacuju i formati itd kod admina
    :resenje: trece, mozda samo da ostavim kao sto je u dokumentaciji, bez dodatih formata itd..
    -> radim samo nad user, book and bookstatus, necu dirati ostale
- klijent jos nema GUI
    :resenje: implementirati
- protokol ne postoji
    :resenje: osmisliti
- parser nema sve komande jos
    :resenje: implementirati
- podesiti isti jezik u bazi i programu
- razmisli mozda je lakse implementirati sve kao enumeratore
- implementirati osnovni kompajler sa AST pa izvrsavati funkcije tako -> sve bolje izgleda impl enum
- unaprediti jezik servera u mali kompajler
- gotovo!








nezavrseno
+ Server:HandleRequests -> thread handling requests from client
+ Server:CommandParser  -> thread handling requests from GUI server
+ Server:Domains        -> all templates for db tables
+ Server:DataBase       -> setup database and methods for db manipulation
- Server:Protocol       -> define protocol for communication
- Client:Everything
- _Both_:Additional		-> specific quirks


/* Login side
    1. signal NapraviKorisnika(Korisnik)                        :Register
    2. signal UcitajKorisnike(List<Korisnik>)                   :AllUsers
    4. signal UcitajKorisnika(Korisnik)                         :
*/


/* User side
    5. signal IzmeniKorisnika(Korisnik)
    8. signal UcitajKnjige(List<Knjiga>)
    9. signal PretraziKnjige(kriterijum, List<Knjiga>)
    10. signal UcitajKnjigu(Knjiga)
    13. signal NapraviStatusKnjige(Status)
    14. signal IzmeniStatusKnjige(StatusKnjige)
    15. signal UcitajAutore(List<Autor>)
    16. signal UcitajIzdavace(List<Izdavac>)
*/


/* Admin side
    3. signal PretraziKorisnike(kriterijum, List<Korisnik>)     :SearchUs
    6. signal ObrisiKorisnika(Korisnik)
    7. signal NapraviKnjigu(Knjiga)
    9. signal PretraziKnjige(kriterijum, List<Knjiga>)
    11. signal IzmeniKnjigu(Knjiga)
    12. signal ObrisiKnjigu(Knjiga)
*/


uopsteno opcije:
[:USER:]
Kreiranje naloga
Promena naloga
kreiranje statusa knjige
brisanje statusa knjige

[:BOTH:]
pretrazivanje liste knjiga

[:ADMIN:]
brisanje naloga
kreiranje knjige
brisanje knjige
promena podataka o knjizi
pretrazivanje korisnika












[:IDEA:]
Imam pdf program koji na serveru cuva informacije o knjigama na klijentima
server moze da bude konzola samo ili gui, sto bi mozda olaksalo rad
klijent ce biti gui




[:SERVER:]
Ideja:
kad se pokrene, dugmici start i stop i textbox za unos komandi

- Prvo zavrsi GUI i unos komandi, pripremi sve za stvarno parsiranje
- napravi NotImplementedException za svaku komandu
- Kreni sa primanjem klijenata na vezu
- Zavrsi niti ClientHandler
- Postavi bazu podataka tako da radi sve hipoteticki
- Tcp Service kojim kontrolise server
- Slanje i primanje zahteva preko osmisljenog protokola
- Specijalni dugmici -> kick, ban, whoisonline, sendmsgTo(MessageBoxIskoci)

- add terminal like text box and a thread that executes commands:
	? or help	-> prints out commands
	whois		-> lists logged in users
	msg			-> sends msg to user
	kick		-> kicks user
	ban			-> deletes users account
	time		-> time statistics ; what is the time now, how long have we been running...

[:CLIENT:]
- Login gui za klijenta
- prepoznati da li je admin ili nije -> zavise funkcionalnosti
- Konekcija -> usaglasiti protokol sa serverom
- dizajnirati GUI lepse malo